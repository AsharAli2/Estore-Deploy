import{k as T,m as V,_ as h,aZ as g,a_ as p,a$ as F,i as M,b0 as $,e as d,q as B,f as D,j as N,t as _,v as E,w as G,b1 as k,M as O,N as U}from"./index-a0742aba.js";import{s as A}from"./styled-c0cd9b23.js";const L=["component","direction","spacing","divider","children","className","useFlexGap"],q=T(),I=A("div",{name:"MuiStack",slot:"Root",overridesResolver:(e,s)=>s.root});function W(e){return V({props:e,name:"MuiStack",defaultTheme:q})}function Z(e,s){const n=d.Children.toArray(e).filter(Boolean);return n.reduce((a,c,t)=>(a.push(c),t<n.length-1&&a.push(d.cloneElement(s,{key:`separator-${t}`})),a),[])}const z=e=>({row:"Left","row-reverse":"Right",column:"Top","column-reverse":"Bottom"})[e],H=({ownerState:e,theme:s})=>{let n=h({display:"flex",flexDirection:"column"},g({theme:s},p({values:e.direction,breakpoints:s.breakpoints.values}),a=>({flexDirection:a})));if(e.spacing){const a=F(s),c=Object.keys(s.breakpoints.values).reduce((o,r)=>((typeof e.spacing=="object"&&e.spacing[r]!=null||typeof e.direction=="object"&&e.direction[r]!=null)&&(o[r]=!0),o),{}),t=p({values:e.direction,base:c}),m=p({values:e.spacing,base:c});typeof t=="object"&&Object.keys(t).forEach((o,r,i)=>{if(!t[o]){const u=r>0?t[i[r-1]]:"column";t[o]=u}}),n=M(n,g({theme:s},m,(o,r)=>e.useFlexGap?{gap:k(a,o)}:{"& > :not(style):not(style)":{margin:0},"& > :not(style) ~ :not(style)":{[`margin${z(r?t[r]:e.direction)}`]:k(a,o)}}))}return n=$(s.breakpoints,n),n};function J(e={}){const{createStyledComponent:s=I,useThemeProps:n=W,componentName:a="MuiStack"}=e,c=()=>E({root:["root"]},o=>G(a,o),{}),t=s(H);return d.forwardRef(function(o,r){const i=n(o),l=B(i),{component:u="div",direction:x="column",spacing:S=0,divider:y,children:v,className:j,useFlexGap:P=!1}=l,b=D(l,L),C={direction:x,spacing:S,useFlexGap:P},R=c();return N.jsx(t,h({as:u,ownerState:C,ref:r,className:_(R.root,j)},b,{children:y?Z(v,y):v}))})}const K=J({createStyledComponent:O("div",{name:"MuiStack",slot:"Root",overridesResolver:(e,s)=>s.root}),useThemeProps:e=>U({props:e,name:"MuiStack"})}),Y=K;export{Y as S};
